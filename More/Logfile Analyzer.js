"dark"==localStorage.getItem("theme")&&document.documentElement.classList.add("dark-mode");class Groups{constructor(){this.groups=[],this.prefix="Attempt #"}addGroup(avoidEmpty=!1){avoidEmpty&&null!=this.latest&&0==this.latest.length||this.groups.push(this.latest=[])}add(obj){null==this.latest&&this.addGroup(),this.latest.push(obj)}}class ParsedMod{constructor(moduleData){this.moduleData=moduleData,this.tree=void 0,this.counter=void 0,this.displayCounter=!1,this.events=[]}}function convertID(id){return(id.substring(0,1).toUpperCase()+id.substring(1)).replace(/module$/i,"").replace(/^(spwiz|lgnd|Krit|ksm|R4Y|kata)/i,"").replace(/(?!\b)([A-Z])/g," $1")}function $SVG(elem){return $(`<svg>${elem}</svg>`).children().eq(0).unwrap()}function makeExpandable(parent,label){parent.addClass("expandable").append($("<a href='#'>").addClass("expander").text(label).click((function(){return parent.toggleClass("expanded"),!1})))}function makeTree(tree,parent){try{if(tree.forEach((function(node){if(null!==node){var elem=$("<li>").appendTo(parent);"function"==typeof node?node($("<span>").appendTo(elem)):node instanceof $?elem.append(node):"string"==typeof node?elem.text(node):node instanceof Array?(makeExpandable(elem,node[0]),node[2]&&elem.addClass("expanded"),makeTree(node[1].length?node[1]:[$("<em>").text("(none)")],$("<ul>").appendTo(elem))):"object"==typeof node&&"obj"in node?node.expandable?(makeExpandable(elem,void 0===node.label?"":node.label),node.expanded&&elem.addClass("expanded"),elem.append(node.obj)):elem.text(node.label).append(node.obj):"object"==typeof node&&"label"in node?(elem.html(node.label),node.css&&elem.css(node.css)):"object"==typeof node&&"linebreak"in node?(elem.remove(),$("<br>").appendTo(parent)):(console.log("Unrecognized node: "+node),console.log(node)),"object"==typeof node&&"nobullet"in node&&elem.addClass("no-bullet")}})),"object"==typeof tree&&"groups"in tree){var groups=tree.groups.groups;1==groups.length?makeTree(groups[0],parent):groups.forEach((function(group,i){var elem=$("<li>").appendTo(parent);makeExpandable(elem,tree.groups.prefix+(i+1)),makeTree(group,$("<ul>").appendTo(elem))}))}}catch(e){console.log(e),buildwarning||(buildwarning=!0,toastr.warning("An error occurred while generating the page. Some information might be missing.","Page Generation Warning"))}}function selectBomb(serial){var a=$(".bomb[data-serial='"+serial+"']"),div=$("#bomb-"+serial);if(a.length&&div.length||!$("a.bomb").length||(serial=$("a.bomb").last().data("serial"),a=$(".bomb[data-serial='"+serial+"']"),div=$("#bomb-"+serial)),!a.length||!div.length)return!1;$(".bomb.selected").removeClass("selected"),a.addClass("selected"),$(".bomb-group").hide(),div.parent().show(),$("body").scrollTop(div.offset().top),div.find(".autopress").click();var state=readHash();return state.bomb=serial,updateHash(state),!1}function formatTime(seconds,hundredths=!0){const timeParts=[],negative=seconds<0;negative&&(seconds=-seconds),seconds=Math.round(100*seconds)/100;let showRemaining=!1;for(const part of[3600,60,1])(showRemaining||seconds/part>=1||1==part)&&(timeParts.push(Math.floor(seconds/part).toString().padStart(2,"0")),seconds-=Math.floor(seconds/part)*part,showRemaining=!0);return hundredths?`${negative?"-":""}${timeParts.join(":")}.${Math.round(100*seconds).toString().padStart(2,"0")}`:`${negative?"-":""}${timeParts.join(":")}`}function readHash(){var state={};return window.location.hash.length<2||window.location.hash.substr(1).split(";").forEach((function(param){var parts=param.replace(/^bomb-/g,"bomb=").split("=");2==parts.length&&(state[parts[0]]=parts[1])})),state}function updateHash(state){var newUrl=new URL(window.location.href);newUrl.hash=Object.entries(state).map((function(entry){return entry.join("=")})).join(";"),history.replaceState(null,null,newUrl.toString())}$.fn.addCardClick=function(info){var infoCard=$(this);return infoCard.click((function(){const parent=infoCard.parent().parent().parent();return parent.find(".module-info").hide(),info.show(),parent.find(".selected").removeClass("selected"),infoCard.addClass("selected"),!1})).mousedown((function(){return!1})),infoCard};class BombGroup{constructor(){this.Bombs=[],this.Modules={},this.State="Unsolved",this.MissionName="Unknown",this.StartLine=0,this.FilteredLog="",this.ParseAgain=[],this.LoggedSerials=[],this.Events=[],this.RuleSeed=1,this.CompetitiveLogger=!1}get loggedBombs(){return this.Bombs.filter((bomb=>0==this.LoggedSerials.length||this.LoggedSerials.includes(bomb.Serial)))}get isSingleBomb(){return 1==this.loggedBombs.length}ToHTML(opt){var serial=this.Bombs[0].Serial,fragment=`#bomb=${serial}`;opt.url?fragment+=`;#url=${opt.url}`:opt.file&&(fragment+=`;#file=${opt.file}`),$("#download-logfile").html("<a class='button' href='https://ktane.timwi.de/Logfiles/"+(opt.file??"")+".txt'>Download Logfile</a>");var bombHTML=$("<a href='"+fragment+"' class='bomb' data-serial='"+serial+"'>").appendTo($("#bombs")).click((function(){return selectBomb(serial),!1})).mousedown((function(){return!1})),bombGroupHTML=$("<div class='bomb-group'>").hide().appendTo("#wrap");this.PreviewImage&&bombHTML.addClass("preview").css("backgroundImage",`url("${this.PreviewImage}"), url(img/BombPreview.png)`);var totalModules=0,totalNeedies=0;this.loggedBombs.forEach((function(bomb){totalModules+=bomb.TotalModules,totalNeedies+=bomb.Needies,$("<div class='serial'>").text(bomb.Serial).appendTo(bombHTML)})),$("<div class='module-count'>").text(totalModules).append($("<div class='label'>").text(1===totalModules?"module":"modules")).appendTo(bombHTML),totalNeedies>0&&$("<div class='needy-count'>").text(totalNeedies).append($("<div class='label'>").text(1===totalNeedies?"needy":"needies")).appendTo(bombHTML),this.RuleSeed&&1!=this.RuleSeed&&$("<div class='rule-seed'>").text(this.RuleSeed).appendTo(bombHTML);var filteredTab=$("<button class='module'>").text("Filtered Log"),info=$("<div class='bomb-info'>").css("padding-top","10px").appendTo(bombGroupHTML),modules=$("<div class='modules'>").appendTo(info),missionInfo=$("<div class='module-info'>").appendTo(info);$("<h3>").css("margin-top","10px").text("Mission Information").appendTo(missionInfo);var missionInfoTree=["Mission: "+this.MissionName];if(this.isSingleBomb){var singleBomb=this.Bombs[0];missionInfoTree.push("State: "+singleBomb.State,`Solved: ${singleBomb.Solved}/${singleBomb.TotalModules}`,"Strikes: "+singleBomb.Strikes+"/"+singleBomb.TotalStrikes,"Total Time: "+formatTime(singleBomb.Time),"Time Left: ~"+formatTime(singleBomb.TimeLeft))}else missionInfoTree.push("State: "+this.State);this.CompetitiveLogger&&missionInfoTree.push("Competitive Logger enabled.");const dmgString=`/// ${this.MissionName}\n\n`+this.loggedBombs.map((bomb=>[this.isSingleBomb?null:"(",formatTime(bomb.Time,!1),`strikes:${bomb.TotalStrikes}`,"widgets:"+(bomb.Widgets-1),...bomb.Pools.map((pool=>(1==pool.Count?"":`${pool.Count}*`)+pool.Modules.map((module=>module.includes(" ")?`"${module}"`:module)).join(", "))),this.isSingleBomb?null:")"].filter((line=>null!=line)).map((line=>(this.isSingleBomb?"":"\t")+line)).join("\n"))).join("\n\n"),profileWrapper=$("<div>"),profileModules=[...new Set(this.loggedBombs.flatMap((bomb=>Object.keys(bomb.Modules))))],expertProfile=$("<a>Expert</a>").attr("href",`data:application/json,${encodeURIComponent(JSON.stringify({EnabledList:profileModules,Operation:0}))}`).attr("download",`${this.MissionName}.json`),defuserProfile=$("<a>Defuser</a>").attr("href",`data:application/json,${encodeURIComponent(JSON.stringify({EnabledList:profileModules,Operation:1}))}`).attr("download",`${this.MissionName}.json`);profileWrapper.append("Download ",expertProfile,"/",defuserProfile," Profile"),missionInfoTree.push({obj:$("<button class=button>").text("Copy DMG String").click((()=>(navigator.clipboard.writeText(dmgString),!1)))},{obj:profileWrapper}),makeTree(missionInfoTree,$("<ul>").appendTo(missionInfo)),$("<button class='module'>").text("Mission Information").appendTo(modules).addCardClick(missionInfo).click();var eventInfo=$("<div class='module-info'>").appendTo(info);if($("<h3>").css("margin-top","10px").text("Events").appendTo(eventInfo),$("<p>").css("font-weight","bold").text(">>> Real time elapsed > Event").appendTo(eventInfo),makeTree(this.Events.length>0?this.Events.map((eventInfo=>this.EventToNode(eventInfo))):["No events."],$("<ul>").appendTo(eventInfo)),$("<button class='module'>").text("Events").appendTo(modules).addCardClick(eventInfo),0!==this.Events.length&&this.isSingleBomb){function formatTimeForTooltip(time){return formatTime(time,time<60)}const totalRealTime=this.Events[this.Events.length-1].realTime,useSeconds=totalRealTime<180,timeScaleFactor=useSeconds?1:1/60,timeUnits=useSeconds?"seconds":"minutes",stats={strikes:{name:"Strikes",max:this.Bombs[0].TotalStrikes,final:this.Bombs[0].Strikes,type:"STRIKE",dataPoints:[{x:0,y:0,text:`0/${this.Bombs[0].TotalStrikes} strikes`}]},solves:{name:"Solves",max:totalModules-totalNeedies,final:this.Bombs[0].Solved,type:"PASS",dataPoints:[{x:0,y:0,text:`0/${totalModules-totalNeedies} solves`}]},time:{name:"Time",max:this.Bombs[0].Time,final:this.Bombs[0].Time-this.Bombs[0].TimeLeft,dataPoints:[{x:0,y:0}]}};for(const stat of Object.values(stats))stat.value=0;for(const event of this.Events){if("PASS"==event.type){const mod=lastBombGroup.GetMod(event.moduleID,event.loggingID);if(null!=mod&&mod.moduleData.needy)continue}for(const stat of Object.values(stats))if(stat.type==event.type||null==stat.type){"Time"===stat.name?stat.value=stat.max-event.bombTime:stat.value++;const dataPoint={x:event.realTime*timeScaleFactor,y:stat.value/stat.max*100};"Solves"!==stat.name&&"Strikes"!==stat.name||(dataPoint.text=`${stat.value}/${stat.max} ${stat.name.toLowerCase()}<br>${this.GetMod(event.moduleID,event.loggingID).moduleData.displayName}<br>${formatTimeForTooltip(event.realTime)} elapsed<br>${formatTimeForTooltip(event.bombTime)} left`),stat.dataPoints.push(dataPoint)}}for(const stat of Object.values(stats)){const dataPoint={x:totalRealTime*timeScaleFactor,y:stat.final/stat.max*100};if("Solves"===stat.name||"Strikes"===stat.name){if(stat.final===stat.max)continue;dataPoint.text=`${stat.final}/${stat.max} ${stat.name.toLowerCase()}<br>${formatTimeForTooltip(totalRealTime)} elapsed<br>${formatTimeForTooltip(this.Bombs[0].TimeLeft)} left`}stat.dataPoints.push(dataPoint)}const solvesTrace={name:"solves",type:"scatter",mode:"lines",hoverinfo:"text",x:stats.solves.dataPoints.map((dp=>dp.x)),y:stats.solves.dataPoints.map((dp=>dp.y)),hovertext:stats.solves.dataPoints.map((dp=>dp.text)),line:{shape:"hv",color:"#0d0"}},strikesTrace={name:"strikes",type:"scatter",mode:"lines",hoverinfo:"text",x:stats.strikes.dataPoints.map((dp=>dp.x)),y:stats.strikes.dataPoints.map((dp=>dp.y)),hovertext:stats.strikes.dataPoints.map((dp=>dp.text)),line:{shape:"hv",color:"#d00"}},timeTrace={name:"bomb time",type:"scatter",mode:"lines",hoverinfo:"none",x:stats.time.dataPoints.map((dp=>dp.x)),y:stats.time.dataPoints.map((dp=>dp.y)),line:{shape:"linear",color:"#888"}},layout={xaxis:{title:`Real time elapsed (${timeUnits})`,type:"linear",range:[0,totalRealTime*timeScaleFactor*1.05],gridcolor:"#0000",color:"#888"},yaxis:{title:"Percentage",type:"linear",range:[-5,105],gridcolor:"#0000",color:"#888"},paper_bgcolor:"#0000",plot_bgcolor:"#0000",legend:{font:{color:"#888"}},modebar:{bgcolor:"#0000",color:"#8888",activecolor:"#888",remove:"autoscale"}},config={responsive:!0,scrollZoom:!0,displaylogo:!1},graphDiv=document.createElement("div");Plotly.newPlot(graphDiv,[timeTrace,strikesTrace,solvesTrace],layout,config);const graphInfo=$("<div class='module-info'>").appendTo(info);graphInfo.append(graphDiv),$("<button class='module'>").text("Graph").appendTo(modules).addCardClick(graphInfo).on("click",(()=>Plotly.Plots.resize(graphDiv)))}this.loggedBombs.forEach((bomb=>{bomb.ToHTML(filteredTab,this.RuleSeed).appendTo(bombGroupHTML)})),$("<hr color=#ccc size=1>").appendTo(bombGroupHTML);info=$("<div class='bomb-info'>").appendTo(bombGroupHTML),modules=$("<div class='modules'>").appendTo(info);""===this.FilteredLog&&this.FilterLines();var logInfo=$("<div class='module-info'>").appendTo(info);return $("<h3>").css("margin-top","10px").text("Filtered Log").appendTo(logInfo),$("<pre>").css("white-space","pre-wrap").text(this.FilteredLog).appendTo(logInfo),filteredTab.appendTo(modules).addCardClick(logInfo),bombHTML}GetMod(name,id){var mod;return this.Bombs.forEach((function(bomb){mod=mod||bomb.GetMod(name,id)})),!mod&&debugging&&console.warn("Unable to find module: "+name),mod}GetModule(name){var mod;return this.Bombs.forEach((function(bomb){mod=mod||bomb.GetModule(name)})),mod}GetModuleID(name,id){var mod;if(this.Bombs.forEach((function(bomb){mod=mod||bomb.GetModuleID(name,id,!1)})),mod)return mod;for(const bomb of this.Bombs)if(mod=bomb.GetModuleID(name,id))return mod}FilterLines(){if(this.StartLine){for(var log="",i=this.StartLine;i<linen;i++){const line=lines[i].replace(/^([ \t]*)\[(?:Assets\.Scripts\.(?:\w+\.)+)?(.+?)\]( ?(.+))/,"$1[$2]$3");if("[AlarmClockExtender] Settings loaded. Settings = {"!=line)if(line.match(/\[BombGenerator\] Module type ".+" in component pool,/))i+=3;else blacklist.some((val=>line.includes(val)))||(log+=lines[i]+"\n");else i+=15}this.StartLine=void 0,this.FilteredLog=log.replace(/\n{3,}/g,"\n\n")}}EventToNode(eventInfo){switch(eventInfo.type){case"STRIKE":case"PASS":{const mod=this.GetMod(eventInfo.moduleID,eventInfo.loggingID);return[`${formatTime(eventInfo.realTime)} > ${mod.moduleData.displayName+(null!=eventInfo.loggingID?` #${eventInfo.loggingID}`:"")} ${"PASS"==eventInfo.type?"was solved":"struck"}.`,[`Bomb time: ${formatTime(Math.max(eventInfo.bombTime,0))} left.`,null==eventInfo.timeMode?null:`Time mode: ${eventInfo.timeMode}`]]}case"BOMB_DETONATE":for(const bomb of this.loggedBombs)if(bomb.Serial==eventInfo.serial)return[`${formatTime(eventInfo.realTime)} > Bomb (${bomb.Serial}) exploded ${bomb.Strikes==bomb.TotalStrikes?"due to strikes":"because time ran out"}.`,[`Bomb time: ${formatTime(Math.max(eventInfo.bombTime,0))} left.`]];break;case"BOMB_SOLVE":for(const bomb of this.loggedBombs)if(bomb.Serial==eventInfo.serial)return[`${formatTime(eventInfo.realTime)} > Bomb (${bomb.Serial}) was solved.`,[`Bomb time: ${formatTime(Math.max(eventInfo.bombTime,0))} left.`]]}}}function Bomb(seed){this.Seed=seed,this.Time=0,this.TimeLeft=0,this.Strikes=0,this.TotalStrikes=0,this.Pools=[],this.Modules={},this.Solved=0,this.TotalModules=0,this.Needies=0,this.Widgets=0,this.Indicators=[],this.Batteries=[],this.BatteryWidgets=0,this.ModdedWidgets=0,this.ModdedWidgetInfo=[],this.PortPlates=[],this.ModdedBatteries=[],this.ModdedIndicators=[],this.ModdedPortPlates=[],this.ModdedTwoFactor=[],this.DayTimeWidgets=[],this.VoltageMeterWidgets=[],this.Serial="",this.State="Unsolved",this.StartLine=0,this.FilteredLog="",this.Anchors=null,this.ModuleOrder=null,this.LoggingIDs={},this.GetMod=function(name,id){var mod=this.Modules[name];return null==mod||null!=id&&!mod.IDs.some((mod=>mod[0]=="#"+id))?null:mod},this.GetModule=function(name){var mod=this.GetMod(name);return mod?mod.Tree:void 0},this.GetModuleID=function(name,id,createIfMissing=!0){var mod=this.GetMod(name);if(mod){var info,module=mod.IDs;return parseInt(id)>2147483646?(console.error("ID is larger than a 32 bit int, make sure your module counts from 1."),null):(void 0===id&&(id=mod.IDs.length),module.forEach((function(mod){mod[0]=="#"+id&&(info=mod[1])})),info||!createIfMissing?info:((info=["#"+id,[]])[1].groups=new Groups,module.push(info),info[1]))}},this.ToHTML=function(filteredTab,ruleSeed){var serial=this.Serial,info=$("<div class='bomb-info' id='bomb-"+serial+"'>"),edgework=$("<div class='edgework'>").appendTo(info);$("<div class='widget serial'>").text(serial).appendTo(edgework),this.DayTimeWidgets.length>0&&(edgework.append("<div class='widget separator'>"),this.DayTimeWidgets.forEach((function(val){const widget=$("<div class='widget'>").addClass(val[0].toLowerCase()).appendTo(edgework);switch(val[0]){case"RandomizedTime":widget.append($("<span class='shadow'>").text(`⠃${val[1].replace(/\d/g,"8")}`),$("<span class='label'>").html(`${"MIL"==val[2]?"<span style='visibility: hidden'>⠃</span>":"AM"==val[2]?"⠁":"⠂"}${val[1]}`));break;case"ManufactureDate":widget.append($("<span class='label'>").text(val[1].replace("-"," ")));break;case"DayoftheWeek":{const split=val[1].split("-"),colors={Yellow:"yellow",Brown:"rgb(135, 85, 52)",Blue:"rgb(0, 148, 255)",White:"white",Magenta:"magenta",Green:"rgb(0, 255, 44)",Orange:"rgb(255, 195, 0)"};widget.toggleClass("colored",val[3]).append($("<span class='weekday'>").css("color",colors[val[2]]).text(split[0]+" "),$("<span>").addClass("(DD/MM)"==val[4]?"day":"month").text(split[1]),$("<span>-</span>"),$("<span>").addClass("(DD/MM)"==val[4]?"month":"day").text(split[2]));break}}})));var edgeworkSeparator=!1;if(this.Batteries.length>0){edgeworkSeparator=!0,edgework.append("<div class='widget separator'>");var actualBatteries=this.Batteries.slice(0,this.BatteryWidgets);actualBatteries.sort().reverse(),actualBatteries.forEach((function(val){$("<div class='widget battery'>").addClass(1==val?"d":"aa").appendTo(edgework)}))}this.ModdedBatteries.length>0&&(edgeworkSeparator||edgework.append("<div class='widget separator'>"),this.ModdedBatteries.sort((function(batt1,batt2){return batt1[0]<batt2[0]?-1:batt1[0]>batt2[0]?1:batt1[1]<batt2[1]?-1:batt1[1]>batt2[1]?1:batt1[2]<batt2[2]?-1:batt1[2]>batt2[2]?1:0})).reverse(),this.ModdedBatteries.forEach((function(val){"MultipleWidgets:Batteries"==val[0]&&(val[1]>0?$("<div class='widget multiplewidgets battery'>").addClass(4==val[1]?"fouraa":3==val[1]?"threeaa":2==val[1]?"twoaa":"ninevolt").appendTo(edgework):$("<div class='widget multiplewidgets battery'>").addClass(4==val[2]?"emptyfouraa":3==val[2]?"emptythreeaa":2==val[2]?"emptytwoaa":"emptyninevolt").appendTo(edgework))}))),edgeworkSeparator=!1,this.Indicators.length>0&&(edgeworkSeparator=!0,edgework.append("<div class='widget separator'>"),this.Indicators.sort((function(ind1,ind2){return ind1[0]<ind2[0]?-1:ind1[0]>ind2[0]?1:ind1[1]<ind2[1]?-1:ind1[1]>ind2[1]?1:0})),this.Indicators.forEach((function(val){$("<div class='widget indicator'>").addClass(val[0]).appendTo(edgework).append($("<span class='label'>").text(val[1]))}))),this.ModdedIndicators.length>0&&(edgeworkSeparator||edgework.append("<div class='widget separator'>"),this.ModdedIndicators.sort((function(ind1,ind2){return ind1[0]<ind2[0]?-1:ind1[0]>ind2[0]?1:ind1[1]<ind2[1]?-1:ind1[1]>ind2[1]?1:ind1[2]<ind2[2]?-1:ind1[2]>ind2[2]?1:0})),this.ModdedIndicators.forEach((function(val){switch(val[0]){case"MultipleWidgets:EncryptedIndicator":case"MultipleWidgets:Indicator":$("<div class='widget multiplewidgets indicator'>").addClass(val[1].toLowerCase()).appendTo(edgework).append($("<span class='label'>").text(val[2]));break;case"EncryptedIndicatorWidget":$("<div class='widget encryptedindicator'>").addClass(val[1]).appendTo(edgework).append($("<span class='label'>").text(val[2]));break;case"NumberedIndicator":{const colors={red:"225, 3, 3",orange:"6, 107, 27",yellow:"255, 248, 0",green:"6, 107, 27",blue:"12, 0, 152",purple:"172, 14, 206",black:"0, 0, 0",white:"255, 255, 255",brown:"129, 66, 9"};$("<div class='widget numberedindicator'>").addClass(val[1]).css("background-color",`rgb(${colors[val[4]]})`).appendTo(edgework).append($("<span class='label'>").text(val[3]));break}}}))),edgeworkSeparator=!1,this.PortPlates.length>0&&(edgework.append("<div class='widget separator'>"),edgeworkSeparator=!0,this.PortPlates.forEach((function(val){var plate=$("<div class='widget portplate'>").appendTo(edgework);val.forEach((function(port){$("<span>").addClass(port.toLowerCase()).appendTo(plate)}))}))),this.ModdedPortPlates.length>0&&(edgeworkSeparator||edgework.append("<div class='widget separator'>"),this.ModdedPortPlates.sort((function(pp1,pp2){return pp1[0]<pp2[0]?-1:pp1[0]>pp2[0]?1:0})),this.ModdedPortPlates.forEach((function(val){if("MultipleWidgets:Ports"==val[0]){var plate=$("<div class='widget multiplewidgets portplate'>").appendTo(edgework);val[1].forEach((function(port){$("<span>").addClass(port.toLowerCase()).appendTo(plate)}))}}))),this.ModdedTwoFactor.length>0&&(edgework.append("<div class='widget separator'>"),this.ModdedTwoFactor.sort((function(tfa1,tfa2){return tfa1[0]<tfa2[0]?-1:tfa1[0]>tfa2[0]?1:0})),this.ModdedTwoFactor.forEach((function(val){"TwoFactorWidget"==val&&edgework.append("<div class='widget twofactor'>"),"MultipleWidgets:TwoFactor"==val&&edgework.append("<div class='widget multiplewidgets twofactor'>")}))),this.VoltageMeterWidgets.length>0&&(edgework.append("<div class='widget separator'>"),this.VoltageMeterWidgets.sort((function(a,b){return a-b})),this.VoltageMeterWidgets.forEach((function(voltage){var widget=$("<div class='widget voltagemeter'>").appendTo(edgework);$("<span>").css({left:voltage/10*83+9}).appendTo(widget)})));var modules=$("<div class='modules'>").appendTo(info),indicators=this.Indicators.map((function(val){return val.join(" ")})),ports={};this.PortPlates.forEach((function(plate){plate.forEach((function(port){ports[port]||(ports[port]=0),ports[port]++}))}));var portList=[];Object.keys(ports).forEach((function(port){var count=ports[port];portList.push((count>1?count+" × ":"")+(PortNames[port]||port))}));var caseHTML=$("<span>").text(" Unknown"),edgeworkInfo=$("<div class='module-info'>").appendTo(info);$("<h3>").text("Edgework").appendTo(edgeworkInfo),makeTree(["Serial: "+this.Serial,"Batteries: "+this.Batteries.reduce((function(a,b){return a+b}),0),"Holders: "+this.Batteries.length,"Ports: "+(portList.length>0?portList.join(", "):"None"),"Indicators: "+(indicators.length>0?indicators.join(", "):"None"),"Port Plates: "+this.PortPlates.length,"Widgets: "+(this.Batteries.length+indicators.length+this.PortPlates.length+this.ModdedWidgets),this.ModdedWidgetInfo.length>0?["Modded Widgets:",this.ModdedWidgetInfo]:null,{label:"Case:",obj:caseHTML}],$("<ul>").appendTo(edgeworkInfo)),$("<button class='module'>").text("Edgework").appendTo(modules).addCardClick(edgeworkInfo);var mods=[];for(var moduleID in this.Modules)if(this.Modules.hasOwnProperty(moduleID)){var mod=this.Modules[moduleID];const parsedMod=new ParsedMod(mod.moduleData);if(parsedMod.events=mod.Events,0!==mod.IDs.length){const IDs=mod.IDs.filter((info=>null==this.LoggingIDs||null==this.LoggingIDs[moduleID]||this.LoggingIDs[moduleID].includes(parseInt(info[0].substring(1)))));IDs.forEach((info=>{const modClone=Object.assign({},parsedMod);modClone.tree=info[1],modClone.counter=info[0],modClone.displayCounter=1!=IDs.length,modClone.events=1==IDs.length?mod.Events:mod.Events.filter((event=>"#"+event.loggingID==info[0])),mods.push(modClone)}));continue}0===mod.Tree.length&&0===mod.Tree.groups.groups.length||(parsedMod.tree=mod.Tree),mods.push(parsedMod)}mods.sort((function(modA,modB){return sortKeyA=modA.moduleData.displayName.toLowerCase().replace(/^the /i,""),sortKeyB=modB.moduleData.displayName.toLowerCase().replace(/^the /i,""),sortKeyA<sortKeyB?-1:sortKeyA>sortKeyB?1:modA.counter.substr(1)-modB.counter.substr(1)}));const preferredManuals=JSON.parse(localStorage.getItem("preferredManuals")??"{}");if(mods=mods.filter((mod=>"Holdable"!==mod?.moduleData?.repo?.Type)),mods.forEach((function(parseData){var moduleInfo=$("<div class='module-info'>").appendTo(info).data("module-id",parseData.moduleID);$("<h3>").text(parseData.moduleData.displayName).appendTo(moduleInfo),$("<a>").text("Manual").attr("href",function(parseData){const moduleData=parseData.moduleData,repoName=encodeURIComponent(moduleData.repo?.Name);let path=(moduleData.repo?.FileName||repoName||moduleData.displayName).replace("'","’").replace(/[<>:"/\\|?*]/g,""),preferredManual=preferredManuals[repoName];return parseData.tree&&0!=parseData.tree.length&&"string"==typeof parseData.tree[0]&&parseData.tree[0].startsWith("Language is ")?(path+=` (${parseData.tree[0].split(" ")[2]} — *)`,path=path.replace("Big Button","The Button").replace("Vent Gas","Venting Gas").replace("Passwords","Password").replace("Who's on First","Who’s on First").replace(" Translated"," translated")+".html"):"(PDF)"===preferredManual?path=`${repoName}.pdf`:void 0!==preferredManual?path=repoName+" "+preferredManual.replace(/ \((HTML|PDF)\)$/,((_,type)=>"."+type.toLowerCase())):path+=".html",path.endsWith(".html")?(path=`../HTML/${path}`,1!=ruleSeed&&(path+="#"+ruleSeed)):path=`../PDF/${path}`,path}(parseData)).css({top:0,right:0,position:"absolute"}).appendTo(moduleInfo),!parseData.tree||0===parseData.tree.length&&0===parseData.tree.groups.groups.length?!1===parseData.moduleData.hasLogging?$("<p>").text("Doesn't have logging.").appendTo(moduleInfo):$("<p>").html("Please check the ").append($('<a href="#bomb='+serial+'">Filtered Log</a>').click((function(){return filteredTab.click(),!1}))).append(" as the information for this module cannot be automatically parsed.").appendTo(moduleInfo):makeTree(parseData.tree,$("<ul>").appendTo(moduleInfo)),parseData.moduleData.error&&$("<p>").html(parseData.moduleData.error).appendTo(moduleInfo);var modListing=$(`<button class='module module-${parseData.moduleData.moduleID.replace(/[^-_A-Za-z0-9]/g,"-")}'>`).appendTo(modules).addCardClick(moduleInfo),buttonGrid=$("<div>").text(parseData.moduleData.displayName+(parseData.displayCounter?" "+parseData.counter:"")).appendTo(modListing);const eventData={STRIKE:{symbol:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="-2 -2 100 100" height="30px"><path d="M96 14L82 0 48 34 14 0 0 14l34 34L0 82l14 14 34-34 34 34 14-14-34-34z" fill="red"/></svg>',color:"rgb(100, 0, 0)",scale:1},PASS:{symbol:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 270 270" height="30px"><path stroke="rgb(16, 229, 60)" stroke-width="60" fill="none" d="M30 170l80 60L245 20"></path></svg>',color:"rgb(0, 110, 20)",scale:2.7}},eventIndicator=$("<div class='event-indicators'>").appendTo(buttonGrid);let moduleColor=0;for(const eventType in eventData){const eventTotal=parseData.events.filter((event=>event.type===eventType)).length,data=eventData[eventType];if(eventTotal<4)for(let i=0;i<eventTotal;i++)eventIndicator.append($SVG(data.symbol));else eventIndicator.append($SVG(data.symbol).append($SVG('<text dominant-baseline="middle" text-anchor="middle" stroke="white" stroke-width="12">').text(eventTotal).css({"paint-order":"stroke","font-weight":"bold","font-size":"57px",transform:`translate(50%, 50%) scale(${data.scale})`,fill:data.color})));"PASS"==eventType&&(moduleColor+=eventTotal)}if(parseData.events.length>0){const strikes=parseData.events.length-moduleColor;modListing.css("border-right",`5px solid hsla(${moduleColor/parseData.events.length*120}, 100%, 50%)`).attr("title",`(${moduleColor} solve${1==moduleColor?"":"s"}, ${strikes} strike${1==strikes?"":"s"})`)}else!parseData.tree||0===parseData.tree.length&&0===parseData.tree.groups.groups.length?modListing.css("border-right","5px solid rgba(127, 127, 127, 0.25)").attr("title","(No logging was parsed)"):modListing.css("padding-right","10px");const icon=$("<img>").on("error",(function(){console.warn("Couldn't find a module icon for %s. More information: %o",parseData.moduleData.displayName,parseData),$(this).attr("src","../Icons/blank.png")})).appendTo(buttonGrid);if(null==parseData.moduleData.iconPosition)icon.attr("src",`../Icons/${encodeURI(parseData.moduleData.icon)}.png`);else{const position=parseData.moduleData.iconPosition;icon.attr("src","../iconsprite").css({"object-position":`${-32*position.X}px ${-32*position.Y}px`,"object-fit":"none"})}})),null!=this.Anchors&&null!=this.ModuleOrder){const viewBox=[0,0,0,0],faceParent=$("<div>").css({position:"relative","transform-style":"preserve-3d"});caseHTML.replaceWith(faceParent);const faceStyle={width:"50%","transform-origin":"center","backface-visibility":"hidden",transition:"transform 0.5s"};let svg=$SVG("<svg>").css(faceStyle).appendTo(faceParent);const frontFace=svg;for(let moduleIndex=0;moduleIndex<this.ModuleOrder.length;moduleIndex++){if(moduleIndex==this.ModuleOrder.length/2&&(svg=$SVG("<svg>").css(faceStyle).css({transform:"rotateY(180deg)",display:"block",position:"absolute",top:0}).appendTo(faceParent)),null==this.ModuleOrder[moduleIndex])continue;const moduleSplit=this.ModuleOrder[moduleIndex].split(" "),ID=moduleSplit.splice(moduleSplit.length-1),moduleID=moduleSplit.join(" "),matchingModules=mods.filter((mod=>("-"==ID||mod.counter==`#${ID}`)&&mod.moduleData.moduleID==moduleID)),module=matchingModules.length>=1?matchingModules[0]:{moduleData:{icon:"Empty"==moduleID||"Timer"==moduleID?moduleID:"blank"}},x=this.Anchors[moduleIndex][0]*(moduleIndex<this.ModuleOrder.length/2?1:-1)*100,y=-1*this.Anchors[moduleIndex][1]*100;let image;if(void 0!==module.iconPosition){const imageSVG=$SVG(`<svg viewBox="0 0 32 32" x=${x} y=${y} width=22 height=22>`).appendTo(svg);image=$SVG(`<image x=${32*-module.moduleData.iconPosition.X} y=${32*-module.moduleData.iconPosition.Y} href="../iconsprite">`).appendTo(imageSVG)}else image=$SVG(`<image x=${x} y=${y} href="../Icons/${encodeURI(module.moduleData.icon)}.png" width=22 height=22>`).appendTo(svg);$SVG(`<rect x=${x} y=${y} width=22 height=22 stroke=black stroke-width=0.5 fill=none>`).appendTo(svg);for(let j=0;j<4;j++)viewBox[j]=Math[j<2?"min":"max"](viewBox[j],(j%2==0?x:y)+(j<2?0:22));svg.attr("viewBox",`${viewBox[0]} ${viewBox[1]} ${Math.abs(viewBox[0])+viewBox[2]} ${Math.abs(viewBox[1])+viewBox[3]}`),svg.width(.5*Math.min(Math.abs(viewBox[0])+viewBox[2]/.66,1)*100+"%"),image.css("image-rendering","pixelated"),image.on("error",(()=>image.attr("href","../Icons/blank.png")))}const backFace=svg;let currentFace=!1;faceParent.click((()=>{currentFace=!currentFace;const degrees=currentFace?180:0;frontFace.css("transform",`rotateY(${degrees}deg)`),backFace.css("transform",`rotateY(${180-degrees}deg)`)})).after("(Click to flip)")}return info}}function generateParseDataKeys(field){parseKeys[field]=[],parseData.forEach(((moduleData,index)=>{void 0===parseKeys[field][moduleData[field]]&&void 0!==moduleData[field]&&(parseKeys[field][moduleData[field]]=index)}))}function getModuleData(value,field="loggingTag"){return void 0===parseKeys[field]&&generateParseDataKeys(field),void 0!==parseKeys[field][value]?Object.assign({},parseData[parseKeys[field][value]]):null}parseKeys=[],parseData=parseData.flatMap((data=>{if(!Array.isArray(data.moduleID))return[data];const multiple=[],fields=["loggingTag","moduleID","displayName","icon","iconPosition"];for(let i=0;i<data.moduleID.length;i++){const singleData={};for(const field of fields)Array.isArray(data[field])&&(singleData[field]=data[field][i]);singleData.matches=data.matches,multiple.push(singleData)}return multiple}));var bombgroup,lastBombGroup,bomb,ruleseed,readwarning=!1,buildwarning=!1,debugging="file:"==window.location.protocol||"127.0.0.1"==window.location.hostname||"localhost"==window.location.hostname,linen=0,lines=[],bombSerialIndex=0,parsed=[];let websiteParseData,exceptions=[];function GetBomb(){return bombgroup||lastBombGroup||bomb}function pre(line){return $("<pre>").text(line.replace(/^\n/g,""))}function readLine(){return linen++,lines[linen]}function readTaggedLine(){return/^[ \t]*\[(?:Assets\.Scripts\.(?:\w+\.)+)?.+?\] ?(.+)/.exec(readLine())[1]}function readMultiple(count,fnc){return(fnc?readLines(count).map(fnc):readLines(count)).join("\n")}function readLines(count){for(var lines=[],i=0;i<count;i++)lines.push(readLine());return lines}function readTaggedLines(count){for(var lines=[],i=0;i<count;i++)lines.push(readTaggedLine());return lines}function readDirectly(line,name,id){if(line instanceof Array)line.forEach((function(val){readDirectly(val,name,id)}));else{var match=/^=svg\[(.*?)\](<svg .*<\/svg>)$/.exec(line);match&&(line={label:match[1],obj:$(match[2])}),id?GetBomb().GetModuleID(name,id).push(line):GetBomb().GetModule(name).push(line)}}function parseLog(opt){var log=opt.log.replace(/\r/g,"");if(!/^Initialize engine version: .+ .+|Desktop is \d+ x \d+ @ \d+ Hz|Mono path\[0\] = '/.exec(log))return toastr.error("Invalid logfile.","Reading Error"),!1;if($(".javascript-error").show(),bombgroup=null,lastBombGroup=null,bomb=null,bombSerialIndex=0,parsed=[],ruleseed=null,exceptions=[],lines=log.split("\n"),linen=0,null==websiteParseData)return void function(opt){websiteParseData=[],$.get("../json/raw",(function(websiteData){for(const module of websiteData.KtaneModules){const matches=parseData.filter((data=>data.moduleID==module.ModuleID));if(0===matches.length)websiteParseData.push({moduleID:module.ModuleID,displayName:module.Name,loggingTag:module.Name,iconPosition:{X:module.X,Y:module.Y},repo:module});else if(matches.length>=1)for(const match of matches)null!=match.matches||!1===match.hasLogging||match.displayName!=module.Name&&null!=match.displayName||match.loggingTag!=module.Name&&null!=match.loggingTag||match.icon!=module.Name&&null!=match.icon||console.warn(`Unnecessary module: ${module.Name}`),match.repo=module,match.iconPosition={X:module.X,Y:module.Y}}}),"json").always((()=>{parseData.push(...websiteParseData),parseLog(opt)}))}(opt);function getModuleName(moduleID){const moduleData=getModuleData(moduleID,"moduleID");return moduleData?moduleData.displayName:convertID(moduleID)}const taglessParsing=parseData.filter((data=>null==data.loggingTag&&null!=data.matches));for(readwarning=!1,buildwarning=!1;linen<lines.length;){var line=lines[linen],pool=/(\d+) Pools:/.exec(line);if(pool){const poolCount=parseInt(pool[1]);for(let i=0;i<poolCount;i++){const matches=/\[(.+)\] Count: (\d+)/.exec(readLine());bomb.Pools.push({Modules:matches[1].split(", "),Count:parseInt(matches[2])})}linen+=1}else{if(""!==line){var match=/^[ \t]*\[(?:Assets\.Scripts\.(?:\w+\.)+)?(.+?)\]:? ?(.+)/.exec(line);if(match&&!match[2].startsWith("(h)")){var loggingTag=null,id=null,submatch=/(.+?) #(\d+)/.exec(match[1]);submatch?(loggingTag=submatch[1],id=submatch[2]):loggingTag=match[1];let obj=getModuleData(loggingTag);if(null!==id&&null==obj?.moduleID){var potentialModules=parseData.filter((data=>data.loggingTag==loggingTag&&void 0!==data.moduleID));1===potentialModules.length&&(obj=potentialModules[0])}if(obj)try{if(obj.matches)for(const matcher of obj.matches)if(matcher.handler){const matches=(matcher.regex||/.+/).exec(match[2]);if(matches)if(obj.moduleID){var parsedModule=id?GetBomb().GetModuleID(obj.moduleID,id):GetBomb().GetModule(obj.moduleID);if(matcher.handler(matches,parsedModule,GetBomb().GetMod(obj.moduleID)))break}else if(matcher.handler(matches))break}else matcher.regex&&matcher.regex.test(match[2])&&readDirectly(match[2],obj.moduleID,id);else obj.moduleID&&readDirectly(match[2],obj.moduleID,id)}catch(e){console.log(e),readwarning||(readwarning=!0,toastr.warning("An error occurred while reading the logfile. Some information might be missing.","Reading Warning"))}else if(bombgroup){var modName=submatch?submatch[1]:match[1];const parsed=bombgroup.Bombs.some((function(bomb){for(var modID in bomb.Modules)if(getModuleName(modID)==modName||bomb.Modules[modID].moduleData.displayName==modName)return readDirectly(match[2],modID,id),!0}));parsed||bombgroup.ParseAgain.push({modName:modName,line:match[2],id:id})}}else for(const data of taglessParsing)null!=data.matches?data.matches.some((function(matcher){var matches=matcher.regex.exec(line);if(matches)try{if(matcher.handler)return matcher.handler(matches)}catch(e){console.log(e),readwarning||(readwarning=!0,toastr.warning("An error occurred while reading the logfile. Some information might be missing.","Reading Warning"))}})):console.error("A tagless parser doesn't have any .matches: %o",data.matches)}linen++}}var state=readHash();opt.url?state.url=opt.url:opt.file&&(state.file=opt.file),opt.bomb?state.bomb=opt.bomb:opt.module&&(state.module=opt.module);var bombSerial=null,bombModule=null;if(opt.bomb&&parsed.filter((prs=>prs.Bombs.filter((b=>b.Serial===opt.bomb)).length)).length)bombSerial=opt.bomb;else if(opt.module)for(var i=0;i<parsed.length;i++)for(var j=0;j<parsed[i].Bombs.length;j++)opt.module in parsed[i].Bombs[j].Modules&&(bombSerial=parsed[i].Bombs[j].Serial,bombModule=opt.module.replace(/[^-_A-Za-z0-9]/g,"-"));updateHash(state),$(".bomb, .bomb-info").remove(),parsed.forEach((function(obj){obj.ToHTML(opt)})),$("#ui").addClass("has-bomb"),$("#wrap").toggleClass("has-empty-log",parsed.length<1),0!==parsed.length&&selectBomb(bombSerial||parsed[parsed.length-1].Bombs[0].Serial),bombSerial&&bombModule&&$(`#bomb-${bombSerial}>.modules>.module.module-${bombModule}`).click(),setupExceptions(),toastr.success("Log read successfully!"),$(".javascript-error").hide()}function setupExceptions(){if(0===exceptions.length)return;const exceptionDialog=$("dialog#exceptions"),pre=$("dialog#exceptions pre");let buffer="",starts=exceptions.map((e=>e.start)),ends=exceptions.map((e=>e.end)),exceptionElements=[];for(const[n,line]of lines.entries()){if(starts.includes(n))pre.append(document.createTextNode(buffer)),buffer="";else if(ends.includes(n)){const exceptionElement=$("<span>").text(buffer);exceptionElements.push(exceptionElement),pre.append(exceptionElement),buffer=""}buffer+=line+"\n"}pre.append(document.createTextNode(buffer)),toastr.warning("Exceptions found, please report these to their developers!"),$("<button class='button'>View Exceptions</button>").click((event=>{event.preventDefault(),exceptionDialog[0].showModal(),requestIdleCallback((()=>updateIndex(0)))})).appendTo("#download-logfile"),exceptionDialog.click((event=>{event.target===exceptionDialog[0]&&exceptionDialog[0].close()}));let index=0;function updateIndex(change){index=Math.min(Math.max(0,index+change),exceptions.length-1),exceptionElements[index][0].scrollIntoView({block:"center"}),exceptionDialog.find(".current").text(`${index+1} / ${exceptions.length}`).attr("title",`Exception ${index+1} of ${exceptions.length}`)}exceptionDialog.find("button.previous").click((event=>{event.preventDefault(),updateIndex(-1)})),exceptionDialog.find("button.next").click((event=>{event.preventDefault(),updateIndex(1)})),exceptionDialog.find("button.close").click((event=>{event.preventDefault(),exceptionDialog[0].close()}))}$((function(){const dropMsg=$("#full-screen-msg"),pasteButton=$("#paste"),pasteBox=$("#paste-box");function readPaste(clipText,opt={}){var url=clipText;try{url=decodeURIComponent(clipText)}catch(e){}/^https?:\/\//.exec(url)?$.get((debugging?"https://ktane.timwi.de":"")+"/proxy/"+url,(function(data){opt.log=data,opt.url=url,parseLog(opt)})).fail((function(){toastr.error("Unable to get logfile from URL.","Upload Error")})):/^[0-9a-f]{40}$/.exec(url)?$.get((debugging?"https://ktane.timwi.de":"")+`/Logfiles/${url}.txt`,(function(data){opt.log=data,opt.file=url,parseLog(opt)})).fail((function(){toastr.error("Unable to get logfile from URL.","Upload Error")})):(opt.log=clipText,parseLog(opt))}function uploadFiles(files){if(1===files.length){if($("#upload-to-server").prop("checked"))return $("#upload")[0].files=files,void $("#upload-form").submit();var fr=new FileReader;fr.onload=function(){dropMsg.removeClass("hovering"),parseLog({log:fr.result})},fr.readAsText(files[0])}else 0===files.length?(toastr.error("No file found.","Upload Error"),dropMsg.removeClass("hovering")):(toastr.error("Please only upload 1 file at a time.","Upload Error"),dropMsg.removeClass("hovering"))}$(document).on("dragover",(function(){return dropMsg.addClass("hovering"),!1})).on("dragleave",(function(){return dropMsg.removeClass("hovering"),!1})).on("drop",(function(event){event.preventDefault(),event.stopPropagation();var text=event.originalEvent.dataTransfer.getData("Text");text?(readPaste(text),dropMsg.removeClass("hovering")):uploadFiles(event.originalEvent.dataTransfer.files)})).on("paste",(function(event){var oEvent=event.originalEvent;event.preventDefault();var clipText="";window.clipboardData?clipText=window.clipboardData.getData("Text"):"object"==typeof oEvent&&oEvent.clipboardData&&(clipText=oEvent.clipboardData.getData("text/plain")),readPaste(clipText),pasteButton.show(),pasteBox.hide()})).on("keydown",(function(event){if(!event.altKey||event.shiftKey||event.ctrlKey||event.metaKey)return;if("w"==event.key.toLowerCase()||87===event.keyCode){if(!confirm("Refresh to toggle dark mode?"))return;document.documentElement.classList.contains("dark-mode")?localStorage.removeItem("theme"):localStorage.setItem("theme","dark"),location.reload()}})),pasteBox.on("blur",(function(){return pasteButton.show(),pasteBox.hide(),!1})),pasteButton.click((function(){return pasteButton.hide(),pasteBox.show().focus(),!1})),$("#upload").change((function(){uploadFiles(this.files)})),window.onhashchange=function(){var hashState=readHash(),logUrl=hashState.url,logFile=hashState.file,bombSerial=hashState.bomb;logUrl||logFile?readPaste(logUrl||logFile,hashState):bombSerial&&selectBomb(bombSerial)},window.onhashchange(),$(".javascript-error").hide()}));